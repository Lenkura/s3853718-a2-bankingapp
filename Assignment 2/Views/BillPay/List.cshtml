@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model IPagedList<BillPay>
@{
    ViewData["Title"] = "BillPay";
}
<div>
    <h4>List of scheduled Payments</h4>
    <a asp-controller="Payee" asp-action="PayeeList" class="btn btn-primary">Schedule New Payment</a>
    <hr />
    @if (Model.Count > 0)
    {
<table class="table">
    <tr>
        <th>@Html.DisplayNameFor(x => x[0].BillPayID)</th>
        <th>@Html.DisplayNameFor(x => x[0].AccountNumber)</th>
        <th>@Html.DisplayNameFor(x => x[0].PayeeID)</th>
        <th>@Html.DisplayNameFor(x => x[0].Amount)</th>
        <th>@Html.DisplayNameFor(x => x[0].ScheduleTimeUtc)</th>
        <th>@Html.DisplayNameFor(x => x[0].Period)</th>
        <th>@Html.DisplayNameFor(x => x[0].Status)</th>
        <th></th>
    </tr>
    @foreach (var billpay in Model)
    {
        @if (billpay.Status == BillPayStatus.Error)
        {
            <tr class="table-danger">
                <td>@Html.DisplayFor(x => billpay.BillPayID)</td>
                <td>@Html.DisplayFor(x => billpay.AccountNumber)</td>
                <td>@Html.DisplayFor(x => billpay.PayeeID)</td>
                <td>@Html.DisplayFor(x => billpay.Amount)</td>
                <td>@Html.DisplayFor(x => billpay.ScheduleTimeUtc)</td>
                <td>@Html.DisplayFor(x => billpay.Period)</td>
                <td>@Html.DisplayFor(x => billpay.Status)</td>
                <td>
                    <a class="btn btn-warning"
                       asp-action="Edit" asp-route-billpayid="@billpay.BillPayID">Reschedule</a>
                    <a class="btn btn-warning"
                       asp-action="Cancel" asp-route-billpayid="@billpay.BillPayID">Cancel</a>
                </td>
            </tr>
        }
        @if (billpay.Status == BillPayStatus.Blocked)
        {
            <tr class="table-secondary">
                <td>@Html.DisplayFor(x => billpay.BillPayID)</td>
                <td>@Html.DisplayFor(x => billpay.AccountNumber)</td>
                <td>@Html.DisplayFor(x => billpay.PayeeID)</td>
                <td>@Html.DisplayFor(x => billpay.Amount)</td>
                <td>@Html.DisplayFor(x => billpay.ScheduleTimeUtc)</td>
                <td>@Html.DisplayFor(x => billpay.Period)</td>
                <td>@Html.DisplayFor(x => billpay.Status)</td>
                <td>
                    <a class="btn btn-dark"
                       asp-action="Cancel" asp-route-billpayid="@billpay.BillPayID">Cancel</a>
                </td>
            </tr>
        }
        @if (billpay.Status == BillPayStatus.Ready)
        {
            <tr>
                <td>@Html.DisplayFor(x => billpay.BillPayID)</td>
                <td>@Html.DisplayFor(x => billpay.AccountNumber)</td>
                <td>@Html.DisplayFor(x => billpay.PayeeID)</td>
                <td>@Html.DisplayFor(x => billpay.Amount)</td>
                <td>@Html.DisplayFor(x => billpay.ScheduleTimeUtc)</td>
                <td>@Html.DisplayFor(x => billpay.Period)</td>
                <td>@Html.DisplayFor(x => billpay.Status)</td>
                <td>
                    <a class="btn btn-primary"
                       asp-action="Edit" asp-route-billpayid="@billpay.BillPayID">Edit</a>
                    <a class="btn btn-primary"
                       asp-action="Cancel" asp-route-billpayid="@billpay.BillPayID">Cancel</a>
                </td>
            </tr>
        }
    }
</table>
        @Html.PagedListPager(Model, page => Url.Action("List", new { page }),
    new PagedListRenderOptions
         {
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" }
    })
    }
    else
    {
        <p>No Payments Scheduled</p>
    }
</div>